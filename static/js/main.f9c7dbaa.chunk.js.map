{"version":3,"sources":["img/hamburger.svg","img/search-icon.svg","components/RecipeComponent.js","App.js","index.js"],"names":["RecipeContainer","styled","div","CoverImage","img","RecipeName","span","Ingrediants","RecipeInfo","SeeMoreText","CloseModal","MovieComponent","recipeObj","useState","show","setShow","image","label","ingredients","url","Dialog","open","DialogTitle","DialogContent","map","ingObj","text","weight","DialogActions","onClick","window","src","AppContainer","AppColumn","AppName","Header","SearchBox","SearchIcon","HeaderImage","SearchInput","input","HdSection","HomeIcon","App","timeoutId","setTimeoutId","recipeList","setRecipeList","FetchRecipe","searchString","a","axios","get","response","data","hits","Hamburger","SearchIcons","placeholder","onChange","e","clearTimeout","timeout","setTimeout","target","value","length","RecipeComponent","recipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,MAA0B,sCCA1B,MAA0B,wC,kDCOnCA,EAAkBC,IAAOC,IAAV,8MAUfC,EAAaF,IAAOG,IAAV,6FAKVC,EAAaJ,IAAOK,KAAV,oLASVC,EAAcN,IAAOC,IAAV,yKAQXM,EAAaP,IAAOC,IAAV,uNAWVO,EAAcR,IAAOK,KAAV,6LASXI,EAAaT,IAAOK,KAAV,kMAuDDK,EA5CQ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACxB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEQC,EAAkCJ,EAAlCI,MAAOC,EAA2BL,EAA3BK,MAAOC,EAAoBN,EAApBM,YAAYC,EAAQP,EAARO,IAElC,OACE,qCACA,eAACC,EAAA,EAAD,CAAQC,KAAMP,EAAd,UACE,cAACQ,EAAA,EAAD,0BACA,eAACC,EAAA,EAAD,WACI,kCACE,kCACE,6CACA,2CAEF,gCACGL,EAAYM,KAAI,SAACC,GAAD,OAAY,+BAC3B,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,oBAMlB,eAACC,EAAA,EAAD,WACA,cAACnB,EAAD,CAAaoB,QAAS,kBAAKC,OAAOT,KAAKF,IAAvC,sBACA,cAACT,EAAD,CAAYmB,QAAS,kBAAKd,GAAQ,IAAlC,4BAON,eAACf,EAAD,WACE,cAACG,EAAD,CAAa4B,IAAKf,EAAOa,QAAS,kBAAKd,GAAQ,MAC/C,cAACV,EAAD,UAAaY,IACb,cAACV,EAAD,CAAasB,QAAS,kBAAKd,GAAQ,IAAnC,yBACA,cAACP,EAAD,CAAYqB,QAAS,kBAAMC,OAAOT,KAAKF,IAAvC,wC,iBC/FAa,EAAe/B,IAAOC,IAAV,yFAKZ+B,EAAYhC,IAAOC,IAAV,6HAMTgC,EAAUjC,IAAOC,IAAV,8FAKPiC,EAASlC,IAAOC,IAAV,qXAkBNkC,EAAYnC,IAAOC,IAAV,oNAUTmC,EAAapC,IAAOG,IAAV,6DAIVkC,EAAcrC,IAAOG,IAAV,8EAMXmC,GAActC,IAAOuC,MAAV,4PAgBXC,GAAYxC,IAAOC,IAAV,kLASTwC,GAAWzC,IAAOG,IAAV,8EAuDCuC,OAjDf,WACE,MAAkC9B,mBAAS,IAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAAoChC,mBAAS,IAA7C,mBAAOiC,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACKC,IAAMC,IAAN,0CACcH,EADd,mBA7FZ,WA6FY,oBA5FX,uCA2FM,OACZI,EADY,OAIlBN,EAAcM,EAASC,KAAKC,MAJV,2CAAH,sDAcjB,OACE,eAACvB,EAAD,WACE,eAACG,EAAD,WACE,eAACD,EAAD,WACE,cAACI,EAAD,CAAaP,IAAKyB,IADpB,mBAIA,eAACpB,EAAD,WACE,cAACC,EAAD,CAAYN,IAAK0B,IACjB,cAAClB,GAAD,CACEmB,YAAY,oBACZC,SAjBW,SAACC,GACpBC,aAAajB,GACb,IAAMkB,EAAUC,YAAW,kBAAMf,EAAYY,EAAEI,OAAOC,MAAO,QAE7DpB,EAAaiB,YAiBX,cAAC7B,EAAD,UACGa,EAAWoB,OACVpB,EAAWtB,KAAI,SAACZ,GAAD,OACb,cAACuD,EAAD,CAAiBvD,UAAWA,EAAUwD,YAGxC,eAAC3B,GAAD,WACE,cAACC,GAAD,CAAUX,IAAKyB,IACf,mECpIZa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f9c7dbaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hamburger.07089ff4.svg\";","export default __webpack_public_path__ + \"static/media/search-icon.077696d4.svg\";","import React, { useState } from \"react\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport styled from \"styled-components\";\n\nconst RecipeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0.6rem;\n  width: 15rem;\n  box-shadow: 0 3px 10px 0 #aaa;\n  cursor: pointer;\n  margin: 1.5rem;\n  border-radius: 5px;\n`;\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 12.5rem;\n  border-radius: 5px;\n`;\nconst RecipeName = styled.span`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: black;\n  margin: 1rem 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst Ingrediants = styled.div`\n  display: flex;\n  justify-content: center;\n  border: 1px solid #24ad11;\n  padding: 0.5rem;\n  border-radius: 0.3rem;\n  color: #24ad11;\n`;\nconst RecipeInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  border: 1px solid #ff9100;\n  color: #ff9100;\n  padding: 0.5rem;\n  border-radius: 0.3rem;\n  margin: 1rem 0rem;\n  cursor: pointer;\n  \n`;\nconst SeeMoreText = styled.span`\n  color: #24ad11 ;\n  font-size: 1rem;\n  text-align: center;\n  border: solid 1px #24ad11;\n  border-radius: 3px;\n  padding: 0.6rem 1rem;\n  cursor: pointer;\n`;\nconst CloseModal = styled.span`\ncolor: #ff0000;\nfont-weight: bold;\nfont-size: 1rem;\ntext-align: center;\nborder: solid 1px #ff0000;\nborder-radius: 3px;\npadding: 0.6rem 1rem;\ncursor: pointer;\n`;\n\nconst MovieComponent = ({ recipeObj }) => {\n  const [show, setShow] = useState(false)\n \n  const { image, label, ingredients,url } = recipeObj;\n\n  return (\n    <>\n    <Dialog open={show}>\n      <DialogTitle>Ingrediants</DialogTitle>\n      <DialogContent>\n          <table>\n            <thead>\n              <th>Ingrediants</th>\n              <th>Weight</th>\n            </thead>\n            <tbody>\n              {ingredients.map((ingObj) => <tr>\n                <td>{ingObj.text}</td>\n                <td>{ingObj.weight}</td>\n\n              </tr> ) }\n              \n            </tbody>\n          </table>\n          <DialogActions>\n          <SeeMoreText onClick={()=> window.open(url)}>See More</SeeMoreText>\n          <CloseModal onClick={()=> setShow(false)}>Close</CloseModal>\n          \n\n        </DialogActions>\n        </DialogContent>\n\n    </Dialog>\n    <RecipeContainer  >\n      <CoverImage  src={image} onClick={()=> setShow(true)} ></CoverImage>\n      <RecipeName>{label}</RecipeName>\n      <Ingrediants onClick={()=> setShow(true)}>Ingrediants</Ingrediants>\n      <RecipeInfo onClick={() => window.open(url)}>\n        See Complete Recipe\n      </RecipeInfo>\n    </RecipeContainer>\n    </>\n  );\n};\nexport default MovieComponent;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Hamburger from \"./img/hamburger.svg\";\nimport SearchIcons from \"./img/search-icon.svg\";\nimport RecipeComponent from \"./components/RecipeComponent\";\n\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst API_ID = \"da0096d5\";\nconst API_KEY = \"7b866514b4db917583651e6b2274ef27\t\";\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nconst AppColumn = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\nconst AppName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: rgb(0, 0, 0);\n  color: white;\n  padding: 0.3rem;\n  font-size: 1.7rem;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n  align-items: center;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 700px) {\n     {\n      font-size: 1.2rem;\n    }\n  }\n`;\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 0.7rem 0.7rem;\n  border-radius: 6px;\n  margin-left: 1.4rem;\n  width: 50%;\n  background-color: white;\n  margin-right: 0.3rem;\n`;\nconst SearchIcon = styled.img`\n  width: 2rem;\n  height: 2rem;\n`;\nconst HeaderImage = styled.img`\n  width: 3rem;\n  height: 3rem;\n  margin: 1rem;\n`;\n\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 1rem;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 1rem;\n  width: 100%;\n\n  @media only screen and (max-width: 768px) {\n     {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst HdSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 34.1rem;\n  align-items: center;\n  justify-content: center;\n  opacity: 60%;\n`;\nconst HomeIcon = styled.img`\n  width: 3rem;\n  height: 3rem;\n  margin: 1rem;\n`;\n\nfunction App() {\n  const [timeoutId, setTimeoutId] = useState(\"\");\n  const [recipeList, setRecipeList] = useState([]);\n\n  const FetchRecipe = async (searchString) => {\n    const response = await axios.get(\n      `https://api.edamam.com/search?q=${searchString}&app_id=${API_ID}&app_key=${API_KEY}`\n    );\n    setRecipeList(response.data.hits);\n    // console.log(response, \"response\")\n  };\n\n  const onChangeText = (e) => {\n    clearTimeout(timeoutId);\n    const timeout = setTimeout(() => FetchRecipe(e.target.value, 500));\n    // setSearchQuery(e.target.value)\n    setTimeoutId(timeout);\n  };\n  return (\n    <AppContainer>\n      <Header>\n        <AppName>\n          <HeaderImage src={Hamburger} />\n          Recipe Finder\n        </AppName>\n        <SearchBox>\n          <SearchIcon src={SearchIcons} />\n          <SearchInput\n            placeholder=\"Search for Recipe\"\n            onChange={onChangeText}\n          />\n        </SearchBox>\n      </Header>\n      <AppColumn>\n        {recipeList.length ? (\n          recipeList.map((recipeObj) => (\n            <RecipeComponent recipeObj={recipeObj.recipe} />\n          ))\n        ) : (\n          <HdSection>\n            <HomeIcon src={Hamburger} />\n            <h1> Search For any Recipe!!</h1>\n          </HdSection>\n        )}\n      </AppColumn>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}